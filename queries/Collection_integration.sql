SELECT * FROM
(
SELECT A.*,nsacc.internalid AS RECEIVABLES FROM
(
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/"
,CASE WHEN PAYMENT_NATURE IN ('payment') THEN 'Direct' ELSE 'Advance' END
) AS EXTERNAL_ID,
(PAYMENT_OR_REFUND_DATE) AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')
 
ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,

-- nsacc.account AS RECEIVABLES,
0 AS CR,
CASE WHEN PAYMENT_MODE= 'CARD' THEN SUM(CARD_AMOUNT)
ELSE SUM(PAID_AMOUNT)
END AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE) AS MEMO,
 CASE WHEN PAYMENT_NATURE IN ('payment') THEN CONCAT("DIRECT",MONTHNAME(PAYMENT_OR_REFUND_DATE))
  ELSE CONCAT("ADVANCE",MONTHNAME(PAYMENT_OR_REFUND_DATE)) END  AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER,
NOW() AS CREATED_DATE
 FROM `collection_detail` dtl

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = dtl.DEPARTMENT
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
AND PAYMENT_NATURE IN ('payment','advance')
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT
)AS A
LEFT JOIN recondb.netsuite_payment_account nsacc
ON nsacc.pmethod = A.METHOD

UNION ALL
 
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/"
,CASE WHEN PAYMENT_NATURE IN ('payment') THEN 'Direct' ELSE 'Advance' END) AS EXTERNAL_ID,
(PAYMENT_OR_REFUND_DATE) AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
CASE WHEN PAYMENT_MODE= 'CARD' THEN SUM(CARD_AMOUNT)
ELSE SUM(PAID_AMOUNT)
END  AS CR,
0 AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE) AS MEMO,
 CASE WHEN PAYMENT_NATURE IN ('payment') THEN CONCAT("DIRECT",MONTHNAME(PAYMENT_OR_REFUND_DATE))
  ELSE CONCAT("ADVANCE",MONTHNAME(PAYMENT_OR_REFUND_DATE)) END  AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER
,NOW() AS CREATED_DATE
,recacc.internalid AS RECEIVABLES

 FROM `collection_detail` dtl

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = dtl.DEPARTMENT
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH

LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
AND PAYMENT_NATURE IN ('payment','advance')
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT

UNION ALL
SELECT A.*,nsacc.internalid AS RECEIVABLES FROM
(
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/ADV_REF") AS EXTERNAL_ID,
DATE_FORMAT(PAYMENT_OR_REFUND_DATE,'%d/%m/%Y') AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
CASE WHEN PAYMENT_MODE= 'CARD' THEN ABS(SUM(PAID_AMOUNT))
ELSE ABS(SUM(PAID_AMOUNT))
END AS CR,
0 AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE) AS MEMO,
CONCAT("ADVANCEREFUND",MONTHNAME(PAYMENT_OR_REFUND_DATE))   AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER,
NOW() AS CREATED_DATE
 FROM `collection_detail` dtl
LEFT JOIN recondb.receivable_account recacc
ON recacc.department = 'ADVANCE'
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
AND PAYMENT_NATURE IN ('Refund')
AND PAYMENT_REFERENCE  LIKE '%ADV%'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT
)AS A
LEFT JOIN recondb.netsuite_payment_account nsacc
ON nsacc.pmethod = A.METHOD

UNION ALL
 
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/ADV_REF") AS EXTERNAL_ID,
DATE_FORMAT(PAYMENT_OR_REFUND_DATE,'%d/%m/%Y') AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
0  AS CR,
CASE WHEN PAYMENT_MODE= 'CARD' THEN ABS(SUM(PAID_AMOUNT))
ELSE ABS(SUM(PAID_AMOUNT))
END AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE) AS MEMO,
CONCAT("ADVANCEREFUND",MONTHNAME(PAYMENT_OR_REFUND_DATE))   AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER
,NOW() AS CREATED_DATE
,recacc.internalid AS RECEIVABLES

 FROM `collection_detail` dtl

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = 'ADVANCE'

LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH

LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
AND PAYMENT_NATURE IN ('Refund')
AND PAYMENT_REFERENCE  LIKE '%ADV%'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT

UNION ALL
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/ADVANCEAPPLY") AS EXTERNAL_ID,
(PAYMENT_OR_REFUND_DATE) AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
CASE WHEN PAYMENT_MODE= 'CARD' THEN SUM(CARD_AMOUNT)
ELSE SUM(PAID_AMOUNT)
END AS CR,
0 AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/ADVANCEAPPLY") AS MEMO,
 CASE WHEN PAYMENT_NATURE IN ('payment') THEN CONCAT("DIRECT",MONTHNAME(PAYMENT_OR_REFUND_DATE))
  ELSE CONCAT("ADVANCEAPPLY",MONTHNAME(PAYMENT_OR_REFUND_DATE)) END  AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER,
NOW() AS CREATED_DATE,
recacc.internalid
 FROM `collection_detail` dtl

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = dtl.DEPARTMENT
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
 AND PAYMENT_NATURE ='ADVANCE APPLY'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT



UNION ALL
 
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc1.account,"/ADVANCEAPPLY") AS EXTERNAL_ID,
(PAYMENT_OR_REFUND_DATE) AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
 0 AS CR,
CASE WHEN PAYMENT_MODE= 'CARD' THEN SUM(CARD_AMOUNT)
ELSE SUM(PAID_AMOUNT)
END AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/ADVANCEAPPLY") AS MEMO,
 CASE WHEN PAYMENT_NATURE IN ('payment') THEN CONCAT("DIRECT",MONTHNAME(PAYMENT_OR_REFUND_DATE))
  ELSE CONCAT("ADVANCEAPPLY",MONTHNAME(PAYMENT_OR_REFUND_DATE)) END  AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER
,NOW() AS CREATED_DATE
,recacc.internalid AS RECEIVABLES

 FROM `collection_detail` dtl
LEFT JOIN recondb.receivable_account recacc1
ON recacc1.department = dtl.DEPARTMENT

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = 'advance'
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH

LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE = DATE(NOW())
 AND PAYMENT_NATURE ='ADVANCE APPLY'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT

UNION ALL

SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/ADD_APP_REF") AS EXTERNAL_ID,
(PAYMENT_OR_REFUND_DATE) AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
0 AS CR,
CASE WHEN PAYMENT_MODE= 'CARD' THEN ABS(SUM(PAID_AMOUNT))
ELSE ABS(SUM(PAID_AMOUNT))
END AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/ADVANCEAPPLYREF") AS MEMO,
 CASE WHEN PAYMENT_NATURE IN ('payment') THEN CONCAT("DIRECT",MONTHNAME(PAYMENT_OR_REFUND_DATE))
  ELSE CONCAT("ADVANCEAPPLYREF",MONTHNAME(PAYMENT_OR_REFUND_DATE)) END  AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER,
NOW() AS CREATED_DATE,
recacc.internalid
 FROM `collection_detail` dtl

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = dtl.DEPARTMENT
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
 AND PAYMENT_NATURE ='ADVANCE APPLY REFUND'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT



UNION ALL
 
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc1.account,"/ADD_APP_REF") AS EXTERNAL_ID,
(PAYMENT_OR_REFUND_DATE) AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')
ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
CASE WHEN PAYMENT_MODE= 'CARD' THEN ABS(SUM(PAID_AMOUNT))
ELSE ABS(SUM(PAID_AMOUNT))
END AS CR,
0 AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/ADVANCEAPPLYREF") AS MEMO,
 CASE WHEN PAYMENT_NATURE IN ('payment') THEN CONCAT("DIRECT",MONTHNAME(PAYMENT_OR_REFUND_DATE))
  ELSE CONCAT("ADVANCEAPPLYREF",MONTHNAME(PAYMENT_OR_REFUND_DATE)) END  AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER
,NOW() AS CREATED_DATE
,recacc.internalid AS RECEIVABLES

 FROM `collection_detail` dtl
LEFT JOIN recondb.receivable_account recacc1
ON recacc1.department = dtl.DEPARTMENT

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = 'advance'
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH

LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
 AND PAYMENT_NATURE ='ADVANCE APPLY REFUND'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT

UNION ALL 

SELECT A.*,nsacc.internalid AS RECEIVABLES FROM
(
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/DIR_REF") AS EXTERNAL_ID,
DATE_FORMAT(PAYMENT_OR_REFUND_DATE,'%d/%m/%Y') AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
CASE WHEN PAYMENT_MODE= 'CARD' THEN ABS(SUM(PAID_AMOUNT))
ELSE ABS(SUM(PAID_AMOUNT))
END AS CR,
0 AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE) AS MEMO,
CONCAT("DIRECTREFUND",MONTHNAME(PAYMENT_OR_REFUND_DATE))   AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER,
NOW() AS CREATED_DATE
 FROM `collection_detail` dtl
LEFT JOIN recondb.receivable_account recacc
ON recacc.department = dtl.DEPARTMENT
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH
LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
AND PAYMENT_NATURE IN ('Refund')
AND PAYMENT_REFERENCE  NOT LIKE '%ADV%'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT
)AS A
LEFT JOIN recondb.netsuite_payment_account nsacc
ON nsacc.pmethod = A.METHOD

UNION ALL
 
SELECT CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE,"/",recacc.account,"/DIR_REF") AS EXTERNAL_ID,
DATE_FORMAT(PAYMENT_OR_REFUND_DATE,'%d/%m/%Y') AS `DATE`,
BRANCH,
loc_int AS BRANCH_CODE,
CASE WHEN PARENT_BRANCH IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='cheque' THEN CONCAT(PARENT_BRANCH,'CHEQUE')
WHEN PARENT_BRANCH  IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(PARENT_BRANCH,'Online') WHEN PARENT_BRANCH  NOT IN ('AEH','AHC','AJE','PM-AEH')  AND  payment_mode ='Online Services' THEN CONCAT(BRANCH,'Fund Transfer')

ELSE
CONCAT(BRANCH,PAYMENT_MODE) END AS METHOD,
-- nsacc.account AS RECEIVABLES,
0  AS CR,
CASE WHEN PAYMENT_MODE= 'CARD' THEN ABS(SUM(PAID_AMOUNT))
ELSE ABS(SUM(PAID_AMOUNT))
END AS DR,
CONCAT(PAYMENT_OR_REFUND_DATE,"/",BRANCH,PAYMENT_MODE) AS MEMO,
CONCAT("DIRECTREFUND",MONTHNAME(PAYMENT_OR_REFUND_DATE))   AS REFERENCE,
Sub_int AS SUBSIDIARY,
cusacc.internalid AS CUSTOMER
,NOW() AS CREATED_DATE
,recacc.internalid AS RECEIVABLES

 FROM `collection_detail` dtl

LEFT JOIN recondb.receivable_account recacc
ON recacc.department = dtl.DEPARTMENT

LEFT JOIN recondb.`netsuite_locations` loc
ON loc.Loc_ext = BRANCH
LEFT JOIN recondb.`subsidiary_account` SUB
ON SUB.Externalid =PARENT_BRANCH

LEFT JOIN recondb.customer_account cusacc
ON cusacc.subsidiary = Sub_ext
WHERE PAYMENT_OR_REFUND_DATE= DATE(NOW())
AND PAYMENT_NATURE IN ('Refund')
AND PAYMENT_REFERENCE NOT LIKE '%ADV%'
GROUP BY BRANCH,PAYMENT_OR_REFUND_DATE,PAYMENT_MODE,dtl.DEPARTMENT

 ) AS b
 ORDER BY   b.EXTERNAL_ID,b.DR;